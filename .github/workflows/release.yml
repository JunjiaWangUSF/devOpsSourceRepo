name: Release
on:
  push:
    branches:
      - rc

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write
      repository-projects: write
      actions: write # 新增必要权限

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - run: npm ci

      - name: Run Semantic Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release

      - name: Set RC_VERSION
        run: |
          if [[ ! -f .rc_version ]]; then
            echo "❌ Error: .rc_version file not found"
            exit 1
          fi

          # 使用更健壮的版本号提取方式
          RC_VERSION=$(grep 'RC_VERSION=' .rc_version | tail -1 | awk -F= '{print $2}' | tr -d '[:space:]')

          # 扩展正则表达式支持rc版本号
          if [[ ! "$RC_VERSION" =~ ^rc[0-9]+\.[0-9]+\.[0-9]+(-[a-z]+\.?[0-9]*)?$ ]]; then
            echo "❌ Invalid RC_VERSION format: $RC_VERSION"
            exit 1
          fi

          echo "Validated RC_VERSION: $RC_VERSION"
          echo "RC_VERSION=$RC_VERSION" >> $GITHUB_ENV

      - name: Trigger Infra Repo Dispatch
        env:
          INFRA_TOKEN: ${{ secrets.INFRA_TOKEN }}
        run: |
          # 安装必要工具
          sudo apt-get update && sudo apt-get install -y jq

          # 直接从环境变量获取（避免YAML转义问题）
          RC_VERSION=$(grep 'RC_VERSION=' .rc_version | tail -1 | awk -F= '{print $2}' | tr -d '[:space:]')

          # 生成更安全的JSON payload
          JSON_PAYLOAD=$(jq -n \
            --arg event_type "promote-rc" \
            --arg rc_version "$RC_VERSION" \
            '{event_type: $event_type, client_payload: {rc_version: $rc_version}}')

          echo "Generated payload:"
          jq . <<< "$JSON_PAYLOAD"  # 验证JSON格式

          # 添加调试信息（不暴露敏感信息）
          echo "Triggering dispatch event to devOpsInfraRepo..."

          curl -sS -X POST "https://api.github.com/repos/JunjiaWangUSF/devOpsInfraRepo/dispatches" \
            -H "Authorization: token $INFRA_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Content-Type: application/json" \
            -d "$JSON_PAYLOAD" \
            -w "\nHTTP Status: %{http_code}\n"
