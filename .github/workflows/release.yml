name: Release
on:
  push:
    branches: [main]

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write
      repository-projects: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - run: npm ci

      - name: Run Semantic Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release

      - name: Set RC_VERSION
        run: |
          if [[ ! -f .rc_version ]]; then
            echo "❌ Error: .rc_version file not found"
            exit 1
          fi
          RC_VERSION=$(grep 'RC_VERSION=' .rc_version | tail -1 | cut -d= -f2 | tr -d '[:space:]')
          if [[ ! "$RC_VERSION" =~ ^rc[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "❌ Invalid RC_VERSION format: $RC_VERSION"
            exit 1
          fi
          echo "RC_VERSION=$RC_VERSION" >> $GITHUB_ENV

      - name: Trigger Infra Repo Dispatch
        run: |
          # 安装 jq 用于生成 JSON
          sudo apt-get install -y jq

          # 生成动态 JSON 载荷
          JSON_PAYLOAD=$(jq -n \
            --arg event_type "promote-rc" \
            --arg rc_version "${{ env.RC_VERSION }}" \
            '{event_type: $event_type, client_payload: {rc_version: $rc_version}}')

          # 调试输出（不暴露敏感信息）
          echo "Sending JSON payload:"
          echo "$JSON_PAYLOAD"

          # 发送请求
          curl -v -X POST "https://api.github.com/repos/JunjiaWangUSF/devOpsInfraRepo/dispatches" \
            -H "Authorization: token ${{ secrets.REPO_DISPATCH_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Content-Type: application/json" \
            -d "$JSON_PAYLOAD"
