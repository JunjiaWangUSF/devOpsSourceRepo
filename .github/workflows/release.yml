name: Release
on:
  push:
    branches: [main]

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write # Allows pushing to the repository
      issues: write # Allows creating issues
      pull-requests: write # If using pull requests
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - run: npm ci

      - name: Run Semantic Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release

      - name: Set RC_VERSION
        run: |
          # Check for duplicate entries
          RC_LINES=$(grep -c 'RC_VERSION=' .rc_version)
          if [[ "$RC_LINES" -gt 1 ]]; then
            echo "❌ Error: Multiple RC_VERSION entries found in .rc_version:"
            cat .rc_version  # Print the file contents for debugging
            exit 1
          fi

          # Extract the version
          RC_VERSION=$(grep 'RC_VERSION=' .rc_version | cut -d= -f2 | tr -d '[:space:]')

          # Validate format
          if [[ ! "$RC_VERSION" =~ ^rc[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "❌ Invalid RC_VERSION format: $RC_VERSION"
            exit 1
          fi

          # Set environment variable
          echo "RC_VERSION=$RC_VERSION" >> $GITHUB_ENV

      - name: Trigger Infra Promotion
        uses: actions/github-script@v7
        env:
          INFRA_TOKEN: ${{ secrets.INFRA_REPO_TOKEN }}
        with:
          script: |
            await github.rest.repos.createDispatchEvent({
              owner: 'JunjiaWangUSF',
              repo: 'devOpsInfraRepo',
              event_type: 'promote-rc',
              client_payload: {
                rc_version: process.env.RC_VERSION,
                image_tag: 'latest'
              },
              headers: { authorization: `token ${TOKEN}` }  # Inject PAT
            })
