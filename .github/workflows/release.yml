name: Release
on:
  push:
    branches: [main]

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write # Allows pushing to the repository
      issues: write # Allows creating issues
      pull-requests: write # If using pull requests
      repository-projects: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - run: npm ci

      - name: Run Semantic Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release

      - name: Set RC_VERSION
        run: |
          # Check if the file exists
          if [[ ! -f .rc_version ]]; then
            echo "❌ Error: .rc_version file not found"
            exit 1
          fi

          # Extract the LAST occurrence of RC_VERSION
          RC_VERSION=$(grep 'RC_VERSION=' .rc_version | tail -1 | cut -d= -f2 | tr -d '[:space:]')

          # Validate format
          if [[ ! "$RC_VERSION" =~ ^rc[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "❌ Invalid RC_VERSION format: $RC_VERSION"
            exit 1
          fi

          # Optional: Warn about duplicates but proceed
          RC_LINES=$(grep -c 'RC_VERSION=' .rc_version)
          if [[ "$RC_LINES" -gt 1 ]]; then
            echo "⚠️ Warning: Multiple RC_VERSION entries found. Using the LAST one: $RC_VERSION"
          fi

          # Set environment variable
          echo "RC_VERSION=$RC_VERSION" >> $GITHUB_ENV

      - name: Trigger with curl
        run: |
          curl -X POST "https://api.github.com/repos/JunjiaWangUSF/devOpsInfraRepo/dispatches" \
            -H "Authorization: token ${{ secrets.REPO_DISPATCH_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            -d '{"event_type":"promote-rc", "client_payload":{"rc_version":"${{ env.RC_VERSION }}"}}'
